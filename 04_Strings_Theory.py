# ___________________________________________________________________________________
# MISSION 1. 
# Between Markers >< 
# Найти подстроку между маркерами? 
# Elementary+ <>
# Russian has-hints parsing string--
# ___________________________________________________________________________________
# Elementary+
# EN JA Russian UK
# Вам дана строка и два маркера (начальный и конечный). 
# Вам необходимо найти текст, заключенный между двумя этими маркерами. 
# Но есть несколько важных условий:

# - Начальный и конечный маркеры всегда разные
# - Если нет начального маркера, то началом считать начало строки
# - Если нет конечного маркера, то концом считать конец строки
# - Если нет ни конечного, ни начального маркеров, то просто вернуть всю строку
# - Если конечный маркер стоит перед начальным, то вернуть пустую строку

# Input: Три аргумента. Все строки. Второй и третий аргументы это начальный и конечный маркеры.
# Output: Строка.

# Примеры:
assert between_markers("What is >apple<", ">", "<") == "apple"
assert (
    between_markers("<head><title>My new site</title></head>", "<title>", "</title>")
    == "My new site"
)
assert between_markers("No[/b] hi", "[b]", "[/b]") == "No"
assert between_markers("No [b]hi", "[b]", "[/b]") == "hi"

# Как это использутеся: может использоваться для парсинга небольшой верстки

# Предусловия: не может быть более одного маркера одного типа
# ___________________________________________________________________________________
# SOLUTION 1. <>

# <><><><><> Best "Clear" Solution <><><><><>
# <><><><><> Best "Creative" Solution <><><><><>
# <><><><><> Best "Speedy" Solution <><><><><>
# <><><><><> Best "3rd party" Solution <><><><><>
# <><><><><> Uncategorized <><><><><>
# ___________________________________________________________________________________


# ___________________________________________________________________________________
# MISSION 2. 
#  >< 
#  ? 
#  <>
#  --
# ___________________________________________________________________________________

# ___________________________________________________________________________________
# SOLUTION 2. <>

# <><><><><> Best "Clear" Solution <><><><><>
# <><><><><> Best "Creative" Solution <><><><><>
# <><><><><> Best "Speedy" Solution <><><><><>
# <><><><><> Best "3rd party" Solution <><><><><>
# <><><><><> Uncategorized <><><><><>
# ___________________________________________________________________________________



# ___________________________________________________________________________________
# MISSION 3. 
#  >< 
#  ? 
#  <>
#  --
# ___________________________________________________________________________________

# ___________________________________________________________________________________
# SOLUTION 3. <>

# <><><><><> Best "Clear" Solution <><><><><>
# <><><><><> Best "Creative" Solution <><><><><>
# <><><><><> Best "Speedy" Solution <><><><><>
# <><><><><> Best "3rd party" Solution <><><><><>
# <><><><><> Uncategorized <><><><><>
# ___________________________________________________________________________________
